# -*- coding: utf-8 -*-
"""Sales Data Analysis & Visualization

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aB0d1b0sb4MybjtQqqBr6nzYgSyUOjo0
"""

from google.colab import drive
drive.mount('/content/drive')

import zipfile

zip_path = "/content/drive/My Drive/store-sales-time-series-forecasting.zip"  # Dosya yolunu deÄŸiÅŸtir!
extract_path = "/content/data"

with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

print("Dosyalar baÅŸarÄ±yla aÃ§Ä±ldÄ±!")

!ls /content

import os

data_path = "/content/data"  # DosyalarÄ±n olduÄŸu klasÃ¶r
files = os.listdir(data_path)
print("ğŸ“‚ Veriler:", files)

import pandas as pd

# Verinin yolu
csv_path = "/content/data/train.csv"

# CSV dosyasÄ±
df = pd.read_csv(csv_path)

# Ä°lk birkaÃ§ satÄ±r
df.head()

df.shape

df.info()

df.isnull().sum()

df.describe()

# date sÃ¼tununu datetime formatÄ±na Ã§evir
df["date"] = pd.to_datetime(df["date"])

# Veriyi tarihe gÃ¶re sÄ±rala
df = df.sort_values("date")

# Tarihe gÃ¶re satÄ±ÅŸlarÄ± Ã§iz
import matplotlib.pyplot as plt

plt.figure(figsize=(12, 5))
plt.plot(df.groupby("date")["sales"].sum(), label="Toplam SatÄ±ÅŸ", color="royalblue")
plt.xlabel("Tarih")
plt.ylabel("Toplam SatÄ±ÅŸ")
plt.title("Zaman Serisi: GÃ¼nlÃ¼k Toplam SatÄ±ÅŸlar")
plt.legend()
plt.show()

df["date"] = pd.to_datetime(df["date"])

df.set_index("date", inplace=True)  # Tarihi index olarak ayarla
monthly_sales = df.resample("M")["sales"].mean()  # AylÄ±k ortalama satÄ±ÅŸlarÄ± hesapla

import matplotlib.pyplot as plt

plt.figure(figsize=(12,6))
plt.plot(monthly_sales, marker="o", linestyle="-", color="b")
plt.title("AylÄ±k Ortalama SatÄ±ÅŸlar")
plt.xlabel("Tarih")
plt.ylabel("SatÄ±ÅŸ OrtalamasÄ±")
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Histogram Ã§izimi
plt.figure(figsize=(10, 6))
sns.histplot(df['sales'], bins=50, kde=True, color='blue')

# BaÅŸlÄ±k ve etiketler
plt.title('SatÄ±ÅŸ DaÄŸÄ±lÄ±mÄ±', fontsize=14)
plt.xlabel('SatÄ±ÅŸ MiktarÄ±', fontsize=12)
plt.ylabel('Frekans', fontsize=12)

# GrafiÄŸi gÃ¶ster
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(df[df['sales'] < 1000]['sales'], bins=50, kde=True, color='blue')  # 1000 Ã¼zerindeki satÄ±ÅŸlarÄ± hariÃ§ tut
plt.title('SatÄ±ÅŸ DaÄŸÄ±lÄ±mÄ± (Outlier KÄ±sÄ±tlamalÄ±)', fontsize=14)
plt.xlabel('SatÄ±ÅŸ MiktarÄ±', fontsize=12)
plt.ylabel('Frekans', fontsize=12)

plt.show()

import numpy as np

plt.figure(figsize=(10, 6))
sns.histplot(np.log1p(df['sales']), bins=50, kde=True, color='blue')  # log dÃ¶nÃ¼ÅŸÃ¼mÃ¼yle daha dengeli daÄŸÄ±lÄ±m

plt.title('Log DÃ¶nÃ¼ÅŸÃ¼mlÃ¼ SatÄ±ÅŸ DaÄŸÄ±lÄ±mÄ±', fontsize=14)
plt.xlabel('Log(SatÄ±ÅŸ MiktarÄ±)', fontsize=12)
plt.ylabel('Frekans', fontsize=12)

plt.show()

